### RUST
# Ignore Cargo build output
/target
**/target/

# Ignore files generated by Cargo
**/Cargo.lock

# Ignore files generated by rustup
/rustup
**/rustup

# Ignore .DS_Store files (macOS)
**/.DS_Store

# Ignore files generated by JetBrains IDEs
**/.idea/
*.iml

# Ignore files generated by VSCode
**/.vscode/

# Generated by Cargo
# will have compiled files and executables
debug/
target/

# Remove Cargo.lock from gitignore if creating an executable, leave it for libraries
# More information here https://doc.rust-lang.org/cargo/guide/cargo-toml-vs-cargo-lock.html
Cargo.lock

# These are backup files generated by rustfmt
**/*.rs.bk


### C++
# Prerequisites
**/*.d

# Compiled Object files
**/*.slo
**/*.lo
**/*.o
**/*.obj

# Precompiled Headers
**/*.gch
**/*.pch

# Compiled Dynamic libraries
**/*.so
**/*.dylib
**/*.dll

# Fortran module files
**/*.mod
**/*.smod

# Compiled Static libraries
**/*.lai
**/*.la
**/*.a
**/*.lib

# Executables
**/*.exe
**/*.out
**/*.app
**/*.ipa
**/*.dll
**/*.so
**/*.so.*
**/*.dylib
**/*.test

# Directories
**/build/
**/Debug/
**/Release/
**/*.xcodeproj/
**/*.xcworkspace/
**/*.idea/

# OS generated files
**/.DS_Store
**/.DS_Store?
**/._*
**/.Spotlight-V100
**/.Trashes
**/ehthumbs.db
**/Thumbs.db

**/main
**/main.dSYM